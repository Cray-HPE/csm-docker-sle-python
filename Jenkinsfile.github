@Library('csm-shared-library@main') _

// Find a .tar.gz here: https://www.python.org/ftp/python/
def pythonVersion = '3.10.4'

// Tokenize to enable major.minor image tags (e.g. make a 3.10 tag when building 3.10.4).
def (pyMajor, pyMinor, pyBugfix) = pythonVersion.tokenize('.')

def isStable = env.TAG_NAME != null || env.BRANCH_NAME == 'main' ? true : false
pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "1"))
        timeout(time: 20, unit: 'MINUTES')
        disableConcurrentBuilds()
        timestamps()
    }

    environment {
        DESCRIPTION = "CRAY System Management SLE Server Python Build Image"
        DOCKER_ARGS = getDockerBuildArgs(name: env.NAME, description: env.DESCRIPTION)
        DOCKER_BUILDKIT = 1
        NAME = "csm-docker-sle-python"
        PY_FULL_VERSION = "${pythonVersion}"
        PY_VERSION = "${pyMajor}.${pyMinor}"
        VERSION = "${GIT_COMMIT[0..6]}"
    }

    stages {

        stage('Build') {
            steps {
                withCredentials([
                    string(credentialsId: 'sles15-registration-code', variable: 'SLES_REGISTRATION_CODE')
                ]) {
                    sh "make image"
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    publishCsmDockerImage(image: env.NAME, tag: env.VERSION, isStable: isStable)
                    publishCsmDockerImage(image: env.NAME, tag: env.PY_FULL_VERSION, isStable: isStable)
                    publishCsmDockerImage(image: env.NAME, tag: env.PY_VERSION, isStable: isStable)
                    publishCsmDockerImage(image: env.NAME, tag: "latest", isStable: isStable)
                }
            }
        }

    }
}
